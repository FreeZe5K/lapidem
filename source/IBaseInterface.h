//////////////////////////////////////////////////////////////////////////
//  File Name   :   "IBaseInterface.h"
//
//  Author Name :   Mike Hatter
//
//  Purpose     :   Provides 
//////////////////////////////////////////////////////////////////////////
#pragma once

class IBaseInterface
{
public:
	//////////////////////////////////////////////////////////////////////////
	//  Function  :   "Destructor"
	//
	//  Purpose   :   This method is automatically invoked 
	//                when the object is destroyed.
	//////////////////////////////////////////////////////////////////////////
	virtual ~IBaseInterface( )      = 0 { /* DO NOTHING */ }

	//////////////////////////////////////////////////////////////////////////
	//  Function  :   "Update"
	//
	//  Purpose   :   This method is --.
	//////////////////////////////////////////////////////////////////////////
	virtual void Update( float )    = 0;

	//////////////////////////////////////////////////////////////////////////
	//  Function  :   "Render"
	//
	//  Purpose   :   This method is --.
	//////////////////////////////////////////////////////////////////////////
	virtual void Render( )          = 0;

	//////////////////////////////////////////////////////////////////////////
	//  Function  :   "AddRef"
	//
	//  Purpose   :   This method is --.
	//////////////////////////////////////////////////////////////////////////
	virtual void AddRef( )          = 0;

	//////////////////////////////////////////////////////////////////////////
	//  Function  :   "Release"
	//
	//  Purpose   :   This method is --.
	//////////////////////////////////////////////////////////////////////////
	virtual void Release( )         = 0;
};